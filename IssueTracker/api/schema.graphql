scalar GraphQLDate

enum StatusType {
  New
  Assigned 
  Fixed 
  Closed
}
"Toned down Issue, used as inputs, without server generated values." 
input IssueInputs{
    title:String!
    "Optional , If not supplied , Will be set to NEW"
    status:StatusType = New
    owner : String
    effort : Int
    due: GraphQLDate
    description : String
}
"""Inputs for isssueUpdate: all are optional. Whichever is specified will be set to 
the given value, undefined fields will remain unmodified."""
input issueUpdateInputs{
    title: String
    status: StatusType
    owner: String
    effort: Int
    due: GraphQLDate
    description: String
}
type Issue{
    _id: ID!
    id : Int!
    title : String!
    status : StatusType!
    owner : String!
    effort  : Int
    created : GraphQLDate!
    due : GraphQLDate
    description : String
}
type IssueCounts {
    owner: String!
    New: Int
    Assigned: Int
    Fixed: Int
    Closed: Int
}
type IssueListWithPages {
    issues: [Issue!]!
    pages: Int
}
type User{
    signedIn: Boolean!
    givenName: String
    name: String
    email: String
}
### TOP LEVEL DECLARATIONS
type Query{
    about :String!
    issueList(
    status: StatusType
    effortMin: Int
    effortMax: Int
    search: String
    page: Int = 1
    ) : IssueListWithPages
    issue (id:Int!) : Issue!
    IssueCounts(
        status: StatusType
        effortMin: Int
        effortMax: Int
    ): [IssueCounts!]!
    user: User!
}
type Mutation{
    setAboutMessage(message:String!): String!
    issueAdd(issue:IssueInputs!):Issue!
    issueUpdate(id: Int!, changes:issueUpdateInputs!): Issue!
    issueDelete(id: Int!):Boolean!
    issueRestore(id: Int!):Boolean!
}